<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Head_Standard_Idle_Down_Left</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>head = false;

cursor = false;

walk_up_left = false;

walk_up_right = false;

walk_down_left = false;

walk_down_right = false;

image_speed = 0.3;

sprite_index = spr_Head_Standard_Idle_Down_Left;

hspeed = 0;

vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code for the R.A.T.

if ((instance_exists(obj_Rat_Head)) and (head == false)) {
    
    instance_create(obj_Rat_Head.x + 8, obj_Rat_Head.y + 10, obj_Rat_Body)
    instance_create(obj_Rat_Head.x + 8, obj_Rat_Head.y + 28, obj_Rat_Legs)
    instance_create(obj_Rat_Head.x + 10, obj_Rat_Head.y + 14, obj_Rat_Front_Arm)
    instance_create(obj_Rat_Head.x - 7, obj_Rat_Head.y + 15, obj_Rat_Back_Arm)
    instance_create(obj_Rat_Head.x + 28, obj_Rat_Head.y + 15, obj_Rat_Tail)
    
    //Cursor Code
    instance_create(mouse_x, mouse_y, obj_Cursor)

    head = true;
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

obj_Cursor.x = mouse_x;
obj_Cursor.y = mouse_y;

direction_player = point_direction(obj_Rat_Head.x, obj_Rat_Head.y, obj_Cursor.x, obj_Cursor.y)

//Angle of player, if between 0 and 89 degrees, looks to the up-right

if  ((direction_player &gt;= 0) and (direction_player &lt;= 89)) and (walk_up_right == false) {

    sprite_index = spr_Head_Standard_Idle_Up_Right;
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Up_Right;
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Up_Right;
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Right;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Up_Right;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Up_Right; 
    
    obj_Rat_Front_Arm.depth = 2;
    obj_Rat_Back_Arm.depth = 0;
    
    if (keyboard_check(vk_right) or keyboard_check(vk_left) or keyboard_check(vk_up) or keyboard_check(vk_down)) {
        
        sprite_index = spr_Head_Standard_Walking_Up_Right;
        obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Up_Right;
        obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Up_Right;
        obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Up_Right;
        obj_Rat_Legs.sprite_index = spr_Legs_Standard_Walking_Up_Right;
        obj_Rat_Tail.sprite_index = spr_Tail_Standard_Walking_Up_Right; 
        
        walk_up_right = true;
    }
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Angle of player, if between 90 and 179 degrees, looks to the up-left

if ((direction_player &gt;= 90) and (direction_player &lt;= 179)) and (walk_up_left == false) {
    
    sprite_index = spr_Head_Standard_Idle_Up_Left;
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Up_Left;
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Up_Left;
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Left;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Up_Left;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Up_Left; 
    
    obj_Rat_Front_Arm.depth = 2;
    obj_Rat_Back_Arm.depth = 0;

    if (keyboard_check(vk_right) or keyboard_check(vk_left) or keyboard_check(vk_up) or keyboard_check(vk_down)) {
        
        sprite_index = spr_Head_Standard_Walking_Up_Left;
        obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Up_Left;
        obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Up_Left;
        obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Up_Left;
        obj_Rat_Legs.sprite_index = spr_Legs_Standard_Walking_Up_Left;
        obj_Rat_Tail.sprite_index = spr_Tail_Standard_Walking_Up_Left; 
        
        walk_up_left = true;
    }
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Angle of player, if between 180 and 269 degrees, looks to the down-left

if ((direction_player &gt;= 180) and (direction_player &lt;= 269)) and (walk_down_left == false) {

    sprite_index = spr_Head_Standard_Idle_Down_Left;
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Down_Left;
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Down_Left;
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Left;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Down_Left;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Down_Left; 
    
    obj_Rat_Front_Arm.depth = 0;
    obj_Rat_Back_Arm.depth = 2;
    
    if (keyboard_check(vk_right) or keyboard_check(vk_left) or keyboard_check(vk_up) or keyboard_check(vk_down)) {
        
        sprite_index = spr_Head_Standard_Walking_Down_Left;
        obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Down_Left;
        obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Down_Left;
        obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Down_Left;
        obj_Rat_Legs.sprite_index = spr_Legs_Standard_Walking_Down_Left;
        obj_Rat_Tail.sprite_index = spr_Tail_Standard_Walking_Down_Left; 
        
        walk_down_left = true;
    }  
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Angle of player, if between 270 and 359 degrees, looks to the down-right

if ((direction_player &gt;= 270) and (direction_player &lt;= 359)) and (walk_down_right == false) {

    sprite_index = spr_Head_Standard_Idle_Down_Right;
    obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Idle_Down_Right;
    obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Idle_Down_Right;
    obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Right;
    obj_Rat_Legs.sprite_index = spr_Legs_Standard_Idle_Down_Right;
    obj_Rat_Tail.sprite_index = spr_Tail_Standard_Idle_Down_Right;
    
    obj_Rat_Front_Arm.depth = 0;
    obj_Rat_Back_Arm.depth = 2; 

    if (keyboard_check(vk_right) or keyboard_check(vk_left) or keyboard_check(vk_up) or keyboard_check(vk_down)) {
        
        sprite_index = spr_Head_Standard_Walking_Down_Right;
        obj_Rat_Front_Arm.sprite_index = spr_Front_Arm_Standard_Walking_Down_Right;
        obj_Rat_Back_Arm.sprite_index = spr_Back_Arm_Standard_Walking_Down_Right;
        obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Down_Right;
        obj_Rat_Legs.sprite_index = spr_Legs_Standard_Walking_Down_Right;
        obj_Rat_Tail.sprite_index = spr_Tail_Standard_Walking_Down_Right; 
        
        walk_down_right = true;
    }
} 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Direction of the speed

if keyboard_check(vk_right) {

    image_speed = 0.3;
    obj_Rat_Front_Arm.image_speed = 0.3
    obj_Rat_Back_Arm.image_speed = 0.3;
    obj_Rat_Body.image_speed = 0.3;
    obj_Rat_Legs.image_speed = 0.3;
    obj_Rat_Tail.image_speed = 0.3;

    hspeed = 5; 
    obj_Rat_Front_Arm.hspeed = 5; 
    obj_Rat_Back_Arm.hspeed = 5; 
    obj_Rat_Body.hspeed = 5; 
    obj_Rat_Legs.hspeed = 5; 
    obj_Rat_Tail.hspeed = 5; 
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

if keyboard_check(vk_left) {
    
    image_speed = 0.3
    obj_Rat_Front_Arm.image_speed = 0.3
    obj_Rat_Back_Arm.image_speed = 0.3;
    obj_Rat_Body.image_speed = 0.3;
    obj_Rat_Legs.image_speed = 0.3;
    obj_Rat_Tail.image_speed = 0.3;
    
    hspeed = -5; 
    obj_Rat_Front_Arm.hspeed = -5; 
    obj_Rat_Back_Arm.hspeed = -5; 
    obj_Rat_Body.hspeed = -5; 
    obj_Rat_Legs.hspeed = -5; 
    obj_Rat_Tail.hspeed = -5; 
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

if keyboard_check(vk_up) {

    image_speed = 0.3;
    obj_Rat_Front_Arm.image_speed = 0.3;
    obj_Rat_Back_Arm.image_speed = 0.3
    obj_Rat_Body.image_speed = 0.3;
    obj_Rat_Legs.image_speed = 0.3;
    obj_Rat_Tail.image_speed = 0.3;
    
    vspeed = -5; 
    obj_Rat_Front_Arm.vspeed = -5; 
    obj_Rat_Back_Arm.vspeed = -5; 
    obj_Rat_Body.vspeed = -5; 
    obj_Rat_Legs.vspeed = -5; 
    obj_Rat_Tail.vspeed = -5; 
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

if keyboard_check(vk_down) {

    image_speed = 0.3;
    obj_Rat_Front_Arm.image_speed = 0.3;
    obj_Rat_Back_Arm.image_speed = 0.3;
    obj_Rat_Body.image_speed = 0.3;
    obj_Rat_Legs.image_speed = 0.3;
    obj_Rat_Tail.image_speed = 0.3;
    
    vspeed = 5; 
    obj_Rat_Front_Arm.vspeed = 5; 
    obj_Rat_Back_Arm.vspeed = 5; 
    obj_Rat_Body.vspeed = 5; 
    obj_Rat_Legs.vspeed = 5; 
    obj_Rat_Tail.vspeed = 5; 
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//If keys are released while walking, R.A.T. returns to its idle stance

if keyboard_check_released(vk_right) {
    
    image_speed = 0.3;
    obj_Rat_Front_Arm.image_speed = 0.3;
    obj_Rat_Back_Arm.image_speed = 0.3;
    obj_Rat_Body.image_speed = 0.3;
    obj_Rat_Legs.image_speed = 0.3;
    obj_Rat_Tail.image_speed = 0.3;
          
    hspeed = 0; 
    obj_Rat_Front_Arm.hspeed = 0; 
    obj_Rat_Back_Arm.hspeed = 0; 
    obj_Rat_Body.hspeed = 0; 
    obj_Rat_Legs.hspeed = 0; 
    obj_Rat_Tail.hspeed = 0; 
        
    vspeed = 0; 
    obj_Rat_Front_Arm.vspeed = 0; 
    obj_Rat_Back_Arm.vspeed = 0; 
    obj_Rat_Body.vspeed = 0; 
    obj_Rat_Legs.vspeed = 0; 
    obj_Rat_Tail.vspeed = 0; 
        
    walk_up_left = false;
    walk_up_right = false;
    walk_down_left = false;
    walk_down_right = false;
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
    
if keyboard_check_released(vk_left) {

    image_speed = 0.3;
    obj_Rat_Front_Arm.image_speed = 0.3;
    obj_Rat_Back_Arm.image_speed = 0.3;
    obj_Rat_Body.image_speed = 0.3;
    obj_Rat_Legs.image_speed = 0.3;
    obj_Rat_Tail.image_speed = 0.3;
      
    vspeed = 0; 
    obj_Rat_Front_Arm.vspeed = 0; 
    obj_Rat_Back_Arm.vspeed = 0; 
    obj_Rat_Body.vspeed = 0; 
    obj_Rat_Legs.vspeed = 0; 
    obj_Rat_Tail.vspeed = 0; 
    
    hspeed = 0; 
    obj_Rat_Front_Arm.hspeed = 0; 
    obj_Rat_Back_Arm.hspeed = 0; 
    obj_Rat_Body.hspeed = 0; 
    obj_Rat_Legs.hspeed = 0; 
    obj_Rat_Tail.hspeed = 0; 
        
    walk_up_left = false;
    walk_up_right = false;
    walk_down_left = false;
    walk_down_right = false;
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
    
if keyboard_check_released(vk_up) {

    image_speed = 0.3;
    obj_Rat_Front_Arm.image_speed = 0.3;
    obj_Rat_Back_Arm.image_speed = 0.3;
    obj_Rat_Body.image_speed = 0.3;
    obj_Rat_Legs.image_speed = 0.3;
    obj_Rat_Tail.image_speed = 0.3;
      
    hspeed = 0; 
    obj_Rat_Front_Arm.hspeed = 0; 
    obj_Rat_Back_Arm.hspeed = 0; 
    obj_Rat_Body.hspeed = 0; 
    obj_Rat_Legs.hspeed = 0; 
    obj_Rat_Tail.hspeed = 0; 
    
    vspeed = 0; 
    obj_Rat_Front_Arm.vspeed = 0; 
    obj_Rat_Back_Arm.vspeed = 0; 
    obj_Rat_Body.vspeed = 0; 
    obj_Rat_Legs.vspeed = 0; 
    obj_Rat_Tail.vspeed = 0; 
    
    walk_up_left = false;
    walk_up_right = false;
    walk_down_left = false;
    walk_down_right = false;
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
    
if keyboard_check_released(vk_down) {

    image_speed = 0.3;
    obj_Rat_Front_Arm.image_speed = 0.3;
    obj_Rat_Back_Arm.image_speed = 0.3;
    obj_Rat_Body.image_speed = 0.3;
    obj_Rat_Legs.image_speed = 0.3;
    obj_Rat_Tail.image_speed = 0.3;
    
    vspeed = 0; 
    obj_Rat_Front_Arm.vspeed = 0; 
    obj_Rat_Back_Arm.vspeed = 0; 
    obj_Rat_Body.vspeed = 0; 
    obj_Rat_Legs.vspeed = 0; 
    obj_Rat_Tail.vspeed = 0; 
      
    hspeed = 0; 
    obj_Rat_Front_Arm.hspeed = 0; 
    obj_Rat_Back_Arm.hspeed = 0; 
    obj_Rat_Body.hspeed = 0; 
    obj_Rat_Legs.hspeed = 0; 
    obj_Rat_Tail.hspeed = 0; 
        
    walk_up_left = false;
    walk_up_right = false;
    walk_down_left = false;
    walk_down_right = false;
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
